javascript:(async () => { const getAllNames = () => [...document.querySelectorAll('input, select, textarea, button')].map(el => el.name).filter(name => name); const generateRandomString = () => 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789'.split('').map(() => 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789'.charAt(Math.floor(Math.random() * 62))).join('').slice(0, 6); const modal = Object.assign(document.createElement('div'), {style: 'position:fixed;bottom:0;right:0;width:50vw;height:50vh;overflow-y:auto;background-color:#fff;color:#333;padding:20px;box-shadow:0 5px 15px rgba(0,0,0,0.2);border-radius:10px;font-family:"Segoe UI",Tahoma,Geneva,Verdana,sans-serif;z-index:9999;resize:both;cursor:move'}); const title = Object.assign(document.createElement('div'), {style: 'background-color:#007bff;color:white;padding:15px;border-radius:10px 10px 0 0;font-size:18px;font-weight:bold;text-align:center;cursor:move', textContent: 'Form Element Names'}); modal.appendChild(title); const filterContainer = Object.assign(document.createElement('div'), {style: 'margin-top:15px;display:flex;gap:10px'}); const searchInput = Object.assign(document.createElement('input'), {type: 'text', placeholder: 'Search for resources...', style: 'padding:10px;font-size:14px;border-radius:8px;border:1px solid #ddd;width:48%;box-sizing:border-box'}); const excludeInput = Object.assign(document.createElement('input'), {type: 'text', placeholder: 'Exclude words...', style: 'padding:10px;font-size:14px;border-radius:8px;border:1px solid #ddd;width:48%;box-sizing:border-box'}); filterContainer.appendChild(searchInput); filterContainer.appendChild(excludeInput); modal.appendChild(filterContainer); const nameList = Object.assign(document.createElement('ul'), {style: 'list-style:none;padding:0;font-size:14px;line-height:1.8;'}); let names = getAllNames(), filteredNames = [...names]; const queryCount = Object.assign(document.createElement('div'), {style: 'font-size:14px;color:#555;margin-left:20px;', textContent: `${filteredNames.length} query parameter(s) found`}); modal.appendChild(queryCount); const updateList = () => { const searchTerm = searchInput.value.trim().toLowerCase(), excludeTerm = excludeInput.value.trim().toLowerCase(), searchWords = searchTerm ? searchTerm.split(/\s+/) : [], excludeWords = excludeTerm ? excludeTerm.split(/\s+/) : []; filteredNames = names.filter(name => searchWords.every(word => name.toLowerCase().includes(word)) && excludeWords.every(word => !name.toLowerCase().includes(word))); renderList(); }; const renderList = () => { nameList.innerHTML = ''; filteredNames.forEach(name => { const listItem = Object.assign(document.createElement('li'), {textContent: name, style: 'color:#007bff;padding:8px 0;cursor:pointer;transition:background-color 0.3s ease;color 0.3s ease'}); listItem.addEventListener('click', () => { window.open(`${window.location.protocol}//${window.location.hostname}/?${name}=ronisec_${generateRandomString()}`, '_blank'); }); listItem.addEventListener('mouseover', () => { listItem.style.backgroundColor = '#f0f8ff'; listItem.style.color = '#0056b3'; }); listItem.addEventListener('mouseout', () => { listItem.style.backgroundColor = ''; listItem.style.color = '#007bff'; }); nameList.appendChild(listItem); }); if (filteredNames.length === 0) { const noResultsItem = Object.assign(document.createElement('li'), {textContent: 'No results found'}); nameList.appendChild(noResultsItem); } queryCount.textContent = `${filteredNames.length} query parameter(s) found`; }; renderList(); modal.appendChild(nameList); searchInput.addEventListener('input', updateList); excludeInput.addEventListener('input', updateList); const downloadButton = Object.assign(document.createElement('button'), {textContent: 'Download List', style: 'padding:10px 20px;background-color:#007bff;color:#fff;border:none;border-radius:8px;cursor:pointer;width:48%;'}); downloadButton.addEventListener('click', () => { const blob = new Blob([filteredNames.join('\n')], {type: 'text/plain'}); const link = Object.assign(document.createElement('a'), {href: URL.createObjectURL(blob), download: 'form_names.txt'}); link.click(); }); const openAllButton = Object.assign(document.createElement('button'), {textContent: 'Open All in Single URL', style: 'padding:10px 20px;background-color:#007bff;color:#fff;border:none;border-radius:8px;cursor:pointer;width:48%;margin-left:10px;'}); openAllButton.addEventListener('click', () => { const params = filteredNames.map(name => `${name}=ronisec_${generateRandomString()}`).join('&'); window.open(`${window.location.protocol}//${window.location.hostname}/?${params}`, '_blank'); }); const buttonsContainer = Object.assign(document.createElement('div'), {style: 'display:flex;justify-content:space-between;margin-top:20px;align-items:center;'}); buttonsContainer.appendChild(downloadButton); buttonsContainer.appendChild(openAllButton); buttonsContainer.appendChild(queryCount); modal.appendChild(buttonsContainer); document.body.appendChild(modal); let isDragging = false, offsetX, offsetY; title.addEventListener('mousedown', e => { isDragging = true; offsetX = e.clientX - modal.offsetLeft; offsetY = e.clientY - modal.offsetTop; document.body.style.userSelect = 'none'; }); document.addEventListener('mousemove', e => { if (isDragging) { modal.style.left = `${e.clientX - offsetX}px`; modal.style.top = `${e.clientY - offsetY}px`; } }); document.addEventListener('mouseup', () => { isDragging = false; document.body.style.userSelect = ''; }); })();
